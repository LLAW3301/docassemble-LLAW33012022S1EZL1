---
include:
  - EL_SaveResume.yml
  - EL_SecurityCheck.yml
  - EL_PersonalInfo.yml
  - EL_Review.yml
  - EL_LegalProblem.yml
  - EL_OtherIssues.yml
  - EL_Commercial.yml
  - EL_WillsEstates.yml
  - EL_ITandDataPrivacy.yml
  - EL_Taxation.yml
  - EL_FamilyLaw.yml
  - EL_BuyingSellingProperty.yml
  - EL_DisputeResolutionLitigation.yml
  - EL_BuildingConstructionInfrastructure.yml
  - EL_FishingFarmingAquaculture.yml
  - EL_SupportingDocumentation.yml
---
metadata:
  title: |
    Ezra Legal
  exit url: https://ezralegal.com.au/
  date format: d MMMM yyyy
  error help: |
    We are sorry.
    An error has occurred.
    Please [contact us](https://ezralegal.com.au/contact-us/).
---
features:
  navigation: True
  labels above fields: True
  # debug: False
  hide standard menu: True
  disable analytics: True
  bootstrap theme: EL_custom_theme.css
  inverse navbar: True
  javascript: 
    - ELC_JavaScript.js
    - ELC_nprogress.js
  css: 
    - ELC_nprogress.css
  popover trigger: hover
---
metadata:
  footer: |
    Liability limited by a scheme approved under professional standards legislation.
  continue button label: |
    <span id="EL_NextBtn">Next</span> <i class="fas fa-arrow-right ml-2"></i>
---
sections:
  - welcome: Security Check
  - problem: Legal Problem
  - docs: Supporting Documents
  - personal: Personal Information
  - contact: Contact Details
  - submit: Review and Submit  
---
default screen parts:
  under: |
    % if EL_showSaveResumeButton:
    [Save and resume later](${ url_action('EL_saveAndResume') })
    % endif
---
sets: EL_showSaveResumeButton
code: |
  # need to enable multi_user for 'save and resume' capability to work
  multi_user = True
  # save and resume screen is hidden initially
  EL_showSaveResumeScreen = False
  # save and resume button is hidden initially 
  EL_showSaveResumeButton = False
---
mandatory: True
code: |
  # initially (for new sessions) don't show the save and resume button, until the user
  ## at least passed the security check and answerd one key question (otherwise nothing
  ## to save and user is as good as starting fresh). 
  ## This works because the variable is initially undefined, but when the code block
  ## re-runs (as it does numerous times during the interview process), the variable
  ## will be defined and the value won't be reset - it preservers whatever was the 
  ## last value as defined later in the process
  EL_showSaveResumeButton
  
  # delete the variable 'EL_saveResumeSection' so user can save in the future as well
  ## (otherwise user has only one chance to save - DA doesn't redifine values that are
  ## already set)
  undefine('EL_saveResumeSection')  
  
  # when the save and resume button is clicked, show the save and resume pathway
  if EL_showSaveResumeScreen:
    # the below variable will trigger the logic for 'save and resume' defined in
    ## EL_SaveResume.yml
    EL_saveResumeSection
     
  ###
  # if running interview for the first time, returning from 'save and resume' screen,
  # or resuming after saving, the following will run as normal. 
  ###
  
  # the steps/sections on the side are initially hidden until user begins the 
  ## interview process
  nav.hide()
  # show welcome (initial) screen and make sure user agrees to the Privacy Notice
  EL_Screen_Welcome
  # show the steps now to inform user how many steps are remaining
  nav.unhide()
  # ask security question 
  if not EL_SecurityCheckPassed: ### not human or run out of attempts
    # Inform user to attempt again later
    EL_Screen_SecruityCheckFailed
  else: ### user passed test so proceed with interview
    
    #####################################
    #### Legal Problem Section START ####
    # ask user what area of law they need help with and ask questions accordingly
    ####
    
    # NOTE 1: the variable `EL_legalProblemSectionQs` is used to store all questions
    # for which user provided an answer in this section. This is going to be useful
    # later when programmatically generating tabels for the review screen and the docx
    # template. It means that when changing/adding questions only this variable needs
    # to be updated, instead of manually updating multiple files. 
    EL_legalProblemSectionQs = []
    # set current step to 'Legal Problem'
    nav.set_section('problem')
    # add `EL_AskWhatLegalProblem` to the list of asked questions - see NOTE 1
    EL_legalProblemSectionQs.append({"question": "Legal Area", "variable_name": "EL_AskWhatLegalProblem"})
    # ask user what area of law their problem relates to
    EL_AskWhatLegalProblem
    
    # depending on the selected area show different questions
    ########## Commercial Law ###########
    if EL_AskWhatLegalProblem == "Commercial law":
      # gather info about the organisation
      EL_orgName
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Organisation Name", "variable_name": "EL_orgName"})
      EL_orgDescription
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Organisation Description", "variable_name": "EL_orgDescription"})
      # get further details about the issues
      EL_CommercialLawDescription
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Problem Description", "variable_name": "EL_CommercialLawDescription"})
      
    ########## Wills and Estates ##########
    elif EL_AskWhatLegalProblem == "Wills and Estates":
      # ask what specific area they need help with
      EL_willsEstatesArea
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Wills and Estates Areas", "edit_variable": "EL_willsEstatesArea", "value": EL_willsEstatesArea.true_values() })
      # ask estate planning questions if user selected that option
      if EL_willsEstatesArea['Estate Planning']:
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Has Estate Planning Documents", "variable_name": "EL_hasEstatePlanningDocs", "value": yesno(EL_hasEstatePlanningDocs)})
        # ask if user has documents
        if EL_hasEstatePlanningDocs:
          # add question to the list of asked questions - see NOTE 1
          EL_legalProblemSectionQs.append({"question": "Estate Planning Documents", "variable_name": "EL_EstateDocsDescription"})
          # user has documents, ask what documents and what help they need with those
          EL_EstateDocsDescription
        else:
          # user doesn't have documents, ask what documents they want
          EL_knowsWhatDocsNeeded
          
          # user doesn't know what document they need
          if not EL_knowsWhatDocsNeeded:
            EL_DocsNeededUnknown = "I don't know"
            # add question to the list of asked questions - see NOTE 1
            EL_legalProblemSectionQs.append({"question": "Required Document/s", "variable_name": "EL_DocsNeededUnknown", "edit_variable": "EL_knowsWhatDocsNeeded"})
          else:
            # user knows what document they require, ask them to select
            EL_DocsNeeded
            # add question to the list of asked questions - see NOTE 1
            EL_legalProblemSectionQs.append({"question": "Required Document/s", "variable_name": "EL_DocsNeeded", "edit_variable": "EL_knowsWhatDocsNeeded", "value": EL_DocsNeeded.true_values() })
          # TODO: add more questions
          # else:
          #  # user knows what doc they need
          #  if EL_DocsNeeded['Will']:
          #    # user wants a will, ask about executor/s if user is not unsure
          #    if not EL_userNotSureAboutExecutor:
          #      # user did not click unsure, so they have a name
          #      EL_executorName
          #      # ask relationship to user
          #      EL_relationshipToUser
          #      # TODO: maybe make this a list and user can add more???
          
    ########## Family Law ##########
    elif EL_AskWhatLegalProblem == "Family Law":
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Need help with", "variable_name": "EL_FamilyLaw_Area", "value": EL_FamilyLaw_Area.true_values() })
      # ask what specific area they need help with
      EL_FamilyLaw_Area
      # ask if there is court proceedings or orders currently ongoing
      if EL_FamilyLaw_courtProceedingsOrders:
        # ask to provide case number if exists
        if EL_FamilyLaw_hasCaseNumber:
          EL_FamilyLaw_caseNumber
      # TODO: add more questions
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "More details", "variable_name": "EL_FamilyLaw_tellsUsMore", "value": EL_FamilyLaw_tellsUsMore if EL_FamilyLaw_tellsUsMore != '' else "N/A"})
      EL_FamilyLaw_tellsUsMore
      
    ########## Taxation ##########
    elif EL_AskWhatLegalProblem == "Taxation":
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Business Related", "variable_name": "EL_Taxation_isBusiness"})
      # ask if user is enquiring for a business or an personal matter
      if EL_Taxation_isBusiness:
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Business Type", "variable_name": "EL_Taxation_businessType"})
        # user is business, ask type
        EL_Taxation_businessType
        if EL_Taxation_businessType == 'Other':
          # user did not select any of the predefined types, ask user to specify
          EL_Taxation_businessTypeOther
          # add question to the list of asked questions - see NOTE 1
          EL_legalProblemSectionQs.append({"question": "Other Type", "variable_name": "EL_Taxation_businessTypeOther"})
        
      # ask user what is their area of concern, for both bussiness and individual
      EL_Taxation_concernArea
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Area of Concern", "variable_name": "EL_Taxation_concernArea", "value": EL_Taxation_concernArea.true_values() })
        
      ########## Audit ##########
      if EL_Taxation_concernArea['Audit/Intervention']:
        # ask if contacted by ATO for an audit
        EL_Taxation_AuditOccuring
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Contacted by ATO for an audit", "variable_name": "EL_Taxation_AuditOccuring"})
          
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Auidted before", "variable_name": "EL_Taxation_AuditedBefore"})
        # ask if audited previously 
        if EL_Taxation_AuditedBefore:
          # if yes, ask for year
          EL_Taxation_previousAuditYear
          # add question to the list of asked questions - see NOTE 1
          EL_legalProblemSectionQs.append({"question": "Previous Audit Year", "variable_name": "EL_Taxation_previousAuditYear" })
          
      ########## GST ##########
      if EL_Taxation_concernArea['GST']:
        # what GST issue
        EL_Taxation_GST_Area
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "GST Area", "variable_name": "EL_Taxation_GST_Area", "value": EL_Taxation_GST_Area.true_values() })
        if EL_Taxation_GST_Area['Other']:
          # if other, ask user to specify 
          EL_Taxation_GST_areaOther
          # add question to the list of asked questions - see NOTE 1
          EL_legalProblemSectionQs.append({"question": "Other GST Area", "variable_name": "EL_Taxation_GST_areaOther"})

      ########## Taxation - Other ##########
      if EL_Taxation_concernArea['Other']:
        # ask user what is their other area of concern
        EL_Taxation_concernAreaOther
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Other Concerns", "variable_name": "EL_Taxation_concernAreaOther"})
      
      ########## Taxation - ALL Areas ##########
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Want to provide more details", "variable_name": "EL_Taxation_moreDetailsProvided", "value": yesno(EL_Taxation_moreDetailsProvided), "doc_question": "Client wants to provide more details?"})
      # for all taxation areas ask user if they have additional info
      if EL_Taxation_moreDetailsProvided:
        # collect the additional info
        EL_Taxation_moreDetails
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Additional details", "variable_name": "EL_Taxation_moreDetails"})
      
      
    ########## Dispute Resolution and Litigation ##########
    elif EL_AskWhatLegalProblem == "Dispute Resolution and Litigation":
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Contractual Dispute", "variable_name": "EL_DR_isContractual", "value": yesno(EL_DR_isContractual) })
      # ask if contractual dispute 
      if not EL_DR_isContractual:
        # not contractual, ask if trade practice
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Trade Practices Dispute", "variable_name": "EL_DR_isTradePractices", "value": yesno(EL_DR_isTradePractices) })
        if not EL_DR_isTradePractices:
          # add question to the list of asked questions - see NOTE 1
          EL_legalProblemSectionQs.append({"question": "Dispute with co-directors or business partners", "variable_name": "EL_DR_isBusiness" })
          # not trade, ask if dispute between business partner or co-director
          if EL_DR_isBusiness == "No":
            # not business related, ask user to explain their dispute
            EL_DR_explainDispute
            # add question to the list of asked questions - see NOTE 1
            EL_legalProblemSectionQs.append({"question": "Dispute details", "variable_name": "EL_DR_explainDispute" })
      
      ########## DR - General ##########
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Want to provide more details", "variable_name": "EL_DR_moreDetailsProvided", "value": yesno(EL_DR_moreDetailsProvided), "doc_question": "Client wants to provide more details?"})
      # for all taxation areas ask user if they have additional info
      if EL_DR_moreDetailsProvided:
        # collect the additional info
        EL_DR_moreDetails
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Additional details", "variable_name": "EL_DR_moreDetails"})
        
    ########## IT and Data Privacy ##########
    elif EL_AskWhatLegalProblem == "Information Technology and Data Privacy":
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "IT Business", "variable_name": "EL_IT_isITBusiness", "value": yesno(EL_IT_isITBusiness) })
      # ask if user is an IT business
      if EL_IT_isITBusiness:
        # user is IT Business, check if matter relates to advice as IT business
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Seeking advice as an IT business", "variable_name": "EL_IT_adviceForBusiness", "value": yesno(EL_IT_adviceForBusiness) })
        if EL_IT_adviceForBusiness: 
          # ask user to specify
          EL_IT_adviceForBusinessDetails
          # add question to the list of asked questions - see NOTE 1
          EL_legalProblemSectionQs.append({"question": "Details", "variable_name": "EL_IT_adviceForBusinessDetails" })
      if not EL_IT_isITBusiness:
        # not IT business, ask if user is dealing with an IT firm
        EL_IT_withITFirm
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Dealing with IT firm", "variable_name": "EL_IT_withITFirm", "value": yesno(EL_IT_withITFirm) })
       
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Data Privacy Matter", "variable_name": "EL_IT_dataPrivacyMatter", "value": yesno(EL_IT_dataPrivacyMatter) }) 
      # ask if matter is re data privacy
      if EL_IT_dataPrivacyMatter:
        # it is related to data privacy
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Matter relates to data breaches", "variable_name": "EL_IT_isDataBreach", "value": yesno(EL_IT_isDataBreach) })
        # ask if issue is about data breaches
        if EL_IT_isDataBreach:
          # it true ask user to specify
          EL_IT_dataBreachDetails
          # add question to the list of asked questions - see NOTE 1
          EL_legalProblemSectionQs.append({"question": "Issue description ", "variable_name": "EL_IT_dataBreachDetails" })
        
    
      ########## IT - General ##########
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Want to provide more details", "variable_name": "EL_IT_moreDetailsProvided", "value": yesno(EL_IT_moreDetailsProvided), "doc_question": "Client wants to provide more details"})
      # for all taxation areas ask user if they have additional info
      if EL_IT_moreDetailsProvided:
        # collect the additional info
        EL_IT_moreDetails
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Additional details", "variable_name": "EL_DR_moreDetails"})
    
    ########## Building ##########
    elif EL_AskWhatLegalProblem == "Building, Construction and Infrastructure":
      # ask who the user is in relation to the matter ie owner, developer, investor
      EL_BCI_userRole
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Role", "variable_name": "EL_BCI_userRole"})
      # ask if matter invovles contractual issues
      EL_BCI_involvesContractualIssue
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Any contractual issues", "variable_name": "EL_BCI_involvesContractualIssue", "value": yesno(EL_BCI_involvesContractualIssue) })
    
    ########## Farming ##########
    elif EL_AskWhatLegalProblem == "Farming, Fishing and Aquaculture":
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Industry", "variable_name": "EL_FFA_industry", "value": EL_FFA_industry.true_values() })
      # what industry
      if EL_FFA_industry['Farming']:
        # what type of farm
        EL_FFA_farmType
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Farm Type", "variable_name": "EL_FFA_farmType" })
    
    ########## Buying or Selling Property ##########
    elif EL_AskWhatLegalProblem == "Buying or Selling Property":
      # Buying or Selling, ask user to select
      EL_BS_buyingOrSelling
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Buying or Selling", "variable_name": "EL_BS_buyingOrSelling" })
      # ask what type of property
      EL_BS_propertyType
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Property Type", "variable_name": "EL_BS_propertyType" })
      
      # ask user to describe issue
      EL_ProblemDescription
      # TODO: other questions?

    ########## Other/Unsure ##########
    else:
      # add question to the list - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "Description", "variable_name": "EL_ProblemDescription"})
      EL_ProblemDescription
    
    # now show the save and resume button as we have something to actually save
    EL_showSaveResumeButton = True 
    
    #### Legal Problem Section END ####
    ###################################
    
    ################################################
    #### Supporting Documentation Section START ####
    nav.set_section('docs')
    # check if user has documents they want to upload and store them if so
    if EL_hasSupportingDocs:
      EL_supportingDocs
    #### Supporting Documentation Section END ####
    ##############################################
    
    ####################################################
    #### Personal/Contact Information Section START ####
    nav.set_section('personal')
    ###
    # gather personal information 
    ###
    # see Note 1
    EL_PersonalInfoSectionQs = []
    
    # add personal information to the list of asked questions - see NOTE 1
    EL_PersonalInfoSectionQs.append({"question": "Name", "variable_name": "EL_User.name"})
    EL_PersonalInfoSectionQs.append({"question": "Date of Birth", "variable_name": "EL_User.birthdate"})
    EL_PersonalInfoSectionQs.append({"question": "Gender", "variable_name": "EL_User.gender"})
  
    EL_User.name.first
    EL_User.name.last
    EL_User.birthdate
    EL_User.gender
    if EL_User.occupation != '':
      # question is optional, so only add if has value
      EL_PersonalInfoSectionQs.append({"question": "Occupation", "variable_name": "EL_User.occupation"})
    if EL_User.address.address != '':
      # question is optional, so only add if has value
      EL_PersonalInfoSectionQs.append({"question": "Address", "variable_name": "EL_User.address"})
  
    ###
    # gather contact details
    ###
    nav.set_section('contact')
    # see Note 1
    EL_contactDetailsSectionQs = []
  
    # add contact information to the list of asked questions - see NOTE 1
    EL_contactDetailsSectionQs.append({"question": "Email", "variable_name": "EL_User.email"})
    EL_contactDetailsSectionQs.append({"question": "Phone Number", "variable_name": "EL_User.phone_number"})
    EL_contactDetailsSectionQs.append({"question": "Preferred Contact Method", "variable_name": "EL_User.PreferredContact"})

    EL_User.email
    EL_User.phone_number
    EL_User.PreferredContact
    #### Personal/Contact Information Section END ####
    ##################################################
    
    #########################################
    #### Review and Submit Section START ####
    # allow user to review and confirm answers for last time before submission. The 
    ## below file also contains the logic for submitting (inc. emailing interview) 
    ## and canceling
    EL_ReviewSection
    #### Review and Submit Section END ####
    #######################################
---
question: We are here to help!
subquestion: |
  If you have a legal matter or want legal advise, use this form to contact us and get effective help. 
  
  Rest assured, the initial assessment of your matter is free. 
  
  
  <br>
  **By continuing, you agree to the** <a href="#" data-toggle="modal" data-target="#PrivacyNoticeModal">
    Privacy Notice.
  </a>
  <div class="modal fade" id="PrivacyNoticeModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="PrivacyModalLongTitle">Privacy Notice</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          We collect personal information to assess your matter. All information will be securely stored, kept confidential, and only handled as allowed by the <em>Privacy Act 1988</em> (Cth).
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>  
buttons: 
  - Agree and Continue:
      code: |
        EL_Screen_Welcome = True
  - Exit: exit
section: welcome