---
include:
  - EL_SaveResume.yml
  - EL_SecurityCheck.yml
  - EL_PersonalInfo.yml
  - EL_Review.yml
  - EL_LegalProblem.yml
  - EL_OtherIssues.yml
  - EL_Commercial.yml
  - EL_WillsEstates.yml
  - EL_ITandDataPrivacy.yml
  - EL_BuyingSellingProperty.yml
  - EL_DisputeResolutionLitigation.yml
  - EL_FishingFarmingAquaculture.yml
  - EL_SupportingDocumentation.yml
---
metadata:
  title: |
    Ezra Legal | Client Intake Form
  exit url: https://ezralegal.com.au/
  authors:
    - name: Sirage Tarakji
    - name: Aislin Gawler
    - name: Aleyna Aydin
    - name: Jaskirat Singh
    - name: Madeleine Charles
    - name: Tyson Seedsman
  date format: d MMMM yyyy
  error help: |
    We are sorry.
    An error has occurred.
    Please [contact us](https://ezralegal.com.au/contact-us/).
---
features:
  debug: False
  hide standard menu: True
  disable analytics: True
  question back button: True
  navigation back button: False
  navigation: True
  labels above fields: True
  inverse navbar: True
  bootstrap theme: EL_custom_theme.css
  javascript: 
    - ELC_JavaScript.js
    - ELC_nprogress.js
  css: 
    - ELC_nprogress.css
  popover trigger: hover
---
metadata:
  footer: |
    Liability limited by a scheme approved under professional standards legislation.
  continue button label: |
    <span id="EL_NextBtn">Next</span> <i class="fas fa-arrow-right ml-2"></i>
---
sections:
  - welcome: Security Challenge
  - problem: Legal Matter
  - docs: Supporting Documents
  - personal: Personal Information
  - contact: Contact Details
  - submit: Review and Submit  
---
default screen parts:
  under: |
    <br>
    <br>
    % if EL_showSaveResumeButton:
    [Save and resume later](${ url_action('EL_saveAndResume') })
    % endif
---
sets: EL_showSaveResumeButton
code: |
  # need to enable `multi_user` for 'save and resume' capability to work. The trade
  # off is that answers will not be encrypted when stored on the server - see https://docassemble.org/docs/security.html#sessionkeys
  multi_user = True
  # save and resume screen is hidden initially
  EL_showSaveResumeScreen = False
  # save and resume button is hidden initially 
  EL_showSaveResumeButton = False
---
mandatory: True
code: |
  # disable access to variables via browser console and `/vars?i=...` page. This is an
  # important security measure to prevent unauthorised access to interview answers.
  # see https://docassemble.org/docs/functions.html#js_get_interview_variables and
  # https://docassemble.org/docs/security.html#multiuser
  set_status(variable_access=False)
  
  # initially (for new sessions) don't show the save and resume button, until the user
  ## at least passed the security check and answerd one key question (otherwise
  ## there is nothing to save and user is as good as starting fresh). 
  ## This works because the variable is initially undefined, but when the code block
  ## re-runs (as it does numerous times during the interview process), the variable
  ## will be defined and the value won't be reset - it preservers whatever was the 
  ## last value as defined later in the process
  EL_showSaveResumeButton
  
  # delete the variable 'EL_saveResumeSection' so user can save in the future as well
  ## (otherwise user has only one chance to save - DA doesn't redifine values that are
  ## already set)
  undefine('EL_saveResumeSection')  
  
  # when the save and resume button is clicked, show the save and resume pathway
  if EL_showSaveResumeScreen:
    # the below variable will trigger the logic for 'save and resume' defined in
    ## EL_SaveResume.yml
    EL_saveResumeSection
     
  ###
  # if running interview for the first time, returning from 'save and resume' screen,
  # or resuming after saving, the following will run as normal. 
  ###
  
  # the steps/sections on the side are initially hidden until user begins the 
  ## interview process
  nav.hide()
  # show welcome (initial) screen and make sure user agrees to the Privacy Notice
  EL_Screen_Welcome
  # show the steps now to inform user how many steps are remaining
  nav.unhide()
  # ask security question 
  if not EL_SecurityCheckPassed: ### not human or run out of attempts
    # Inform user to attempt again later
    EL_Screen_SecruityCheckFailed
  else: ### user passed test so proceed with interview
    
    #####################################
    #### Legal Problem Section START ####
    # ask user what area of law they need help with and ask questions accordingly
    ####
    
    # NOTE 1: the variable `EL_legalProblemSectionQs` is used to store all questions
    # for which user provided an answer in this section. This is going to be useful
    # later when programmatically generating tabels for the review screen and the docx
    # template. It means that when changing/adding questions only this variable needs
    # to be updated, instead of manually updating multiple files. 
    EL_legalProblemSectionQs = []
    # set current step to 'Legal Problem'
    nav.set_section('problem')
    
    # ask user what they need help with
    EL_AskWhatLegalProblem
    
    if EL_AskWhatLegalProblem != "Something else":
      # if user selected a predefined valued display it as is in the review section
      # add `EL_AskWhatLegalProblem` to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "What help do you require?", "variable_name": "EL_AskWhatLegalProblem"})
    else:
      # otherwise, show what the user wrote in the provided text box
      # add `EL_AskWhatLegalProblem` to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({"question": "What help do you require?", "variable_name": "EL_AskWhatLegalProblem", "value": EL_userDescriptionOfProblem})
    
    
    # now show the save and resume button as we have something to actually save
    EL_showSaveResumeButton = True 
    
    
    # depending on the selected area show different questions if needed      
    ########## If Dispute Resolution and Litigation - I want to sue someone or I am being sued ##########
    if EL_AskWhatLegalProblem == "I want to sue someone" or EL_AskWhatLegalProblem == "I am being sued":
      # ask what area the litigation relates to
      EL_DRL_LitigationArea
      # add question to the list of asked questions - see NOTE 1
      ## and if user selected something else show what they said
      EL_legalProblemSectionQs.append({ "question": "What area does the matter relate to?", "variable_name": "EL_DRL_LitigationArea", "value": EL_DRL_LitigationArea if EL_DRL_LitigationArea != "Something else" else EL_DRL_userDescriptionOfArea})
      # if user selected "breach of contract" ask about area of contract
      if EL_DRL_LitigationArea == "Breach of Contract":
        EL_C_ContractArea
        # add question to the list of asked questions - see NOTE 1
        ## if user did not select a predefined value show their description
        EL_legalProblemSectionQs.append({ "question": "What area does the contract concern?", "variable_name": "EL_C_ContractArea", "value": EL_C_ContractArea if EL_C_ContractArea != "Something else" else EL_C_userDescriptionOfContractArea })
        
      elif EL_DRL_LitigationArea == "Farming, Fishing, or Aquaculture":
        # ask what industry, farming, fishing, or Aquaculture
        EL_FFA_industry
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({ "question": "What is your industry?", "variable_name": "EL_C_ContractArea", "value": EL_FFA_industry.true_values()})
      
      elif EL_DRL_LitigationArea == "Information Technology or Data Privacy": 
        # ask if matter is about data breaches
        EL_IT_isDataBreach
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Does the matter concern a data breach?", "variable_name": "EL_IT_isDataBreach", "value": yesno(EL_IT_isDataBreach) })
      
      # ask the reason of litigation ie why they are being sue or want to sue.
      EL_DRL_LitigationReason
      # add question to the list of asked questions - see NOTE 1
      EL_legalProblemSectionQs.append({ "question": "Why do you want to sue them?" if EL_AskWhatLegalProblem == "I want to sue someone" else "Why are you being sued?", "variable_name": "EL_DRL_LitigationReason" })
    
    ########## If Buying or Selling Property - I want to sell my business or I want to buy a business ##########
    elif EL_AskWhatLegalProblem == "I want to sell my business" or EL_AskWhatLegalProblem == "I want to buy a business":
      # ask if user needs assistance with preparing or clarifying contract, if neither ask what they need
      EL_BSP_wantsToPrepareOrClarifyContract
      # add question to the list of asked questions - see NOTE 1
      ## if user said no show "No - [user input]"
      EL_legalProblemSectionQs.append({ "question": "Do you need help preparing or clarifying a contract?", "variable_name": "EL_BSP_wantsToPrepareOrClarifyContract", "value": EL_BSP_wantsToPrepareOrClarifyContract if EL_BSP_wantsToPrepareOrClarifyContract != "No, something else" else "No - " + EL_BSP_userDescriptionOfHelpNeeded })
    
    ########## If Commercial - I want help with a contract ##########
    elif EL_AskWhatLegalProblem == "I want help with a contract":
      # ask what area the contract relates to
      EL_C_ContractArea
      # add question to the list of asked questions - see NOTE 1
      ## if user did not select a predefined value show their description
      EL_legalProblemSectionQs.append({ "question": "What area does the contract concern?", "variable_name": "EL_C_ContractArea", "value": EL_C_ContractArea if EL_C_ContractArea != "Something else" else EL_C_userDescriptionOfContractArea })
      # if user selected IT or Data privacy
      if EL_C_ContractArea == "Information Technology or Data Privacy": 
        # ask if matter is about data breaches
        EL_IT_isDataBreach
        # add question to the list of asked questions - see NOTE 1
        EL_legalProblemSectionQs.append({"question": "Does the matter concern a data breach?", "variable_name": "EL_IT_isDataBreach", "value": yesno(EL_IT_isDataBreach) })
        
      # ask what sort of help needed ie writing or understanding a contract 
      EL_C_WorkNeeded
      # add question to the list of asked questions - see NOTE 1
      ## if user did not select a predefined value show their description
      EL_legalProblemSectionQs.append({ "question": "What sort of help do you require?", "variable_name": "EL_C_WorkNeeded", "value": EL_C_WorkNeeded if EL_C_WorkNeeded != "Other" else EL_C_userDescriptionOfWorkNeeded })
      
    ########## If Out-of-Scope Matter - I was hurt/injured ##########
    elif EL_AskWhatLegalProblem == "I was hurt/injured":
      # set area to "personal injury"
      EL_OutofScopeArea = "personal injury"
      # tell user we don't deal with this area of law, but we are happy for them to 
      ## continue to send their enquiry, so we may be able to refer them to someone 
      ## who can help. 
      EL_OutofScope
    
    ########## ALL - see if user wants us to know about anything else ##########
    EL_isThereAnythingElse
    # if user has anything else they want to say, show it at the review screen 
    ## and add it to the compiled answers document
    # add question to the list of asked questions - see NOTE 1
    EL_legalProblemSectionQs.append({"question": "Additional Information", "variable_name": "EL_isThereAnythingElse", "value": EL_additionalInfo if EL_isThereAnythingElse else "N/A" })
    
    #### Legal Problem Section END ####
    ###################################
    
    ################################################
    #### Supporting Documentation Section START ####
    nav.set_section('docs')
    # check if user has documents they want to upload and store them if so
    if EL_hasSupportingDocs:
      EL_supportingDocs
      # obtain caption for each attachment 
      for doc in EL_supportingDocs: 
        doc.caption
    #### Supporting Documentation Section END ####
    ##############################################
    
    ####################################################
    #### Personal/Contact Information Section START ####
    nav.set_section('personal')
    ###
    # gather personal information 
    ###
    # see Note 1
    EL_PersonalInfoSectionQs = []
    
    # add personal information to the list of asked questions - see NOTE 1
    EL_PersonalInfoSectionQs.append({"question": "Name", "variable_name": "EL_User.name"})
    EL_PersonalInfoSectionQs.append({"question": "Date of Birth", "variable_name": "EL_User.birthdate"})
    EL_PersonalInfoSectionQs.append({"question": "Gender", "variable_name": "EL_User.gender"})
  
    EL_User.name.first
    EL_User.name.last
    EL_User.birthdate
    EL_User.gender
    if EL_User.occupation != '':
      # question is optional, so only add if has value
      EL_PersonalInfoSectionQs.append({"question": "Occupation", "variable_name": "EL_User.occupation"})
    if EL_User.address.address != '':
      # question is optional, so only add if has value
      EL_PersonalInfoSectionQs.append({"question": "Address", "variable_name": "EL_User.address"})
  
    ###
    # gather contact details
    ###
    nav.set_section('contact')
    # see Note 1
    EL_contactDetailsSectionQs = []
  
    # add contact information to the list of asked questions - see NOTE 1
    EL_contactDetailsSectionQs.append({"question": "Email", "variable_name": "EL_User.email"})
    EL_contactDetailsSectionQs.append({"question": "Phone Number", "variable_name": "EL_User.phone_number", "value": phone_number_formatted(EL_User.phone_number, country='AU')})
    EL_contactDetailsSectionQs.append({"question": "Preferred Contact Method", "variable_name": "EL_User.PreferredContact"})

    EL_User.email
    EL_User.phone_number
    EL_User.PreferredContact
    #### Personal/Contact Information Section END ####
    ##################################################
    
    #########################################
    #### Review and Submit Section START ####
    # allow user to review and confirm answers for last time before submission. The 
    ## below file also contains the logic for submitting (inc. emailing interview) 
    ## and canceling
    EL_ReviewSection
    #### Review and Submit Section END ####
    #######################################
---
template: EL_PrivacyNotice
content: |
  We collect personal information to assess your matter. All information will be securely stored, kept confidential, and only handled as allowed by the *Privacy Act 1988* (Cth).

---
question: We are here to help!
subquestion: |
  If you have a legal matter or want legal advice, use this form to contact us and get effective help.  
  
  Rest assured, the initial assessment of your matter is free. 
  
  
  <br>
  **By continuing, you agree to the** <a href="#" data-toggle="modal" data-target="#PrivacyNoticeModal">
    Privacy Notice.
  </a>
  <div class="modal fade" id="PrivacyNoticeModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="PrivacyModalLongTitle">Privacy Notice</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          ${ EL_PrivacyNotice.content_as_html()}
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>  
buttons: 
  - Agree and Continue:
      code: |
        EL_Screen_Welcome = True
  - Exit: exit
section: welcome